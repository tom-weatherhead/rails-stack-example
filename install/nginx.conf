# If we want to run nginx as a normal console program, not as a daemon, we can uncomment the next line:
# daemon off;

error_log /var/log/nginx/error.log;

events {} # Boilerplate

http {

  # The access_log directive cannot be at the top of the file, outside of the http block, like the error_log directive is.
  access_log /var/log/nginx/access.log;

  # Tell nginx that there's an external server called @app living at our socket
  upstream app {
    server unix:/var/www/apps/rails-stack-example/tmp/sockets/unicorn.sock fail_timeout=0;
  }

  server {

    # Accept connections on localhost:8008
    listen 8008;
	
	# See http://thelazylog.com/how-to-fix-403-fobidden-issue-on-nginx-rails-application/ :
    # listen 8008 default_server;
    # listen [::]:8008 default_server ipv6only=on;

    server_name localhost;

    # rails_env development
    # rails_env staging
    # rails_env production

    # Application root
    root /var/www/apps/rails-stack-example/public;

    # If a path doesn't exist on disk, forward the request to @app
    try_files $uri/index.html $uri @app;

    # Set some configuration options on requests forwarded to @app
    location @app {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_redirect off;
      proxy_pass http://app;
    }

    # redirect server error pages to the static page /50x.html
    # error_page   500 502 503 504  /50x.html;

    # location = /50x.html {
    #     root   html;
    # }

    # location ~* ^/assets/ {
    #     expires 1y;
    #     add_header Cache-Control public;
    #     add_header Last-Modified "";
    #     add_header ETag "";
    #     break;
    # }
  }
}
